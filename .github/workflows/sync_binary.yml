# 🛠️ Sync Binary from Main Repo
# Runs daily at midnight UTC or manually.
# Downloads the latest Windows and Linux binaries from gestion_stock_c release
# Cleans the build/ folder beforehand and prepares them for local testing.

name: 🛠️ Sync Binary from Main Repo

on:
  schedule:
    - cron: '0 0 * * *'        # ⏰ Runs every day at midnight UTC
  workflow_dispatch:           # 🚀 Allows manual run from GitHub UI

jobs:
  sync-latest-binaries:
    runs-on: ubuntu-latest     # 🖥️ Standard Linux runner

    steps:
      # 📥 Step 1: Checkout this test repo (Test_Auto_gestion_stock_c)
      - name: Checkout test repo
        uses: actions/checkout@v3

      # 🔍 Step 2: Get the latest release tag from the main gestion_stock_c repo
      - name: Get latest release tag
        id: get_release
        run: |
          # Fetch the latest release information from GitHub API
          LATEST_TAG=$(curl -s https://api.github.com/repos/amaraoussama94/gestion_stock_c/releases/latest | jq -r .tag_name)
          
          # Print and export the tag
          echo "Latest tag: $LATEST_TAG"
          echo "TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

      # 🧹 Step 3: Clean and prepare the build directory
      - name: 🔄 Clean build directory
        run: |
          # Create build/ if missing
          mkdir -p build/
          
          # Remove any previous binaries to avoid confusion
          rm -f build/*

      # 📦 Step 4: Download the latest binaries (Linux & Windows)
      - name: 📥 Download Windows and Linux binaries
        run: |
          # ✅ Download Linux binary
          curl -L -o build/gestion_stock_linux \
            https://github.com/amaraoussama94/gestion_stock_c/releases/download/${{ steps.get_release.outputs.TAG }}/gestion_stock_linux
          chmod +x build/gestion_stock_linux

          # ✅ Download Windows binary (.exe)
          curl -L -o build/gestion_stock.exe \
            https://github.com/amaraoussama94/gestion_stock_c/releases/download/${{ steps.get_release.outputs.TAG }}/gestion_stock.exe
          
          # Confirm file sizes for debugging
          echo "Downloaded binaries:"
          ls -lh build/
